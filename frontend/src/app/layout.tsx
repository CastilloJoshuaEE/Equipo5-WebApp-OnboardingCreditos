/* import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        {children}
      </body>
    </html>
  );
} */
import React from 'react';
import { SessionProvider } from '../providers/SessionProvider';
import '../styles/globals.css';

interface RootLayoutProps {
  children: React.ReactNode;
}

// Layout principal, solo incluye el SessionProvider y el CSS global.
export default function RootLayout({ children }: RootLayoutProps) {
  return (
    <html lang="es">
      <body suppressHydrationWarning>

        <SessionProvider>
          {children}
        </SessionProvider>
      </body>
    </html>
  );
}